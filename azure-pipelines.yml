# ASP.NET
# Build and test ASP.NET projects.
# Add steps that publish symbols, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/apps/aspnet/build-aspnet-4

trigger: #Significa que este proceso de pipeline se va a disparar cuando se realice un cambio en la rama main.
- main

pool: 
  vmImage: 'windows-2022' #Versión de la imagen de windows donde se compilará la aplicación

variables:
  solution: '**/*.sln' #Variable de la solución.
  mvcProject: 'ManejoPresupuesto/ManejoPresupuesto.csproj' #Path del csproj, en enste caso solo es uno.
  buildPlatform: 'Any CPU'
  buildConfiguration: 'Release'

steps: #Tareas o pasos que ejecutará el pipeline.
- task: UseDotNet@2 
  displayName: 'Install .NET 6'
  inputs:
    packageType: 'sdk'
    version: '6.0.x' #Instalacion del SDK de .NET 6
    
- task: NuGetToolInstaller@1 #Usar el instalador de paquetes de Nuget.

- task: NuGetCommand@2
  inputs:
    restoreSolution: '$(solution)' #Restore de la solución para reinstalar los paquetes de Nuget.

- task: VSBuild@1
  displayName: 'Compile Solution'
  inputs:
    solution: '**\*.sln'
    msbuildArgs: '/p:DSP=Microsoft.Data.Tools.Schema.Sql.SqlAzureV12DatabaseSchemaProvider'
    configuration: '$(buildConfiguration)'

- task: CopyFiles@2
  inputs:
    Contents: '**/*.dacpac'
    flattenFolders: true
    TargetFolder: '$(Build.ArtifactStagingDirectory)/db'


- task: DotNetCoreCLI@2
  displayName: 'Building the artifacts'
  inputs:
    command: 'publish'
    projects: $(mvcProject)
    arguments: '--configuration $(BuildConfiguration) --output $(Build.ArtifactStagingDirectory)/webapp --runtime win-x86 --self-contained'
    zipAfterPublish: false
    modifyOutputPath: false

- task: PublishBuildArtifacts@1
  displayName: 'Publishing the artifacts'