@model IEnumerable<IndexAccountViewModel>

@{
    ViewData["title"] = "Accounts";

    string FormatBalance(decimal balance)
    {
        return Math.Abs(balance).ToString("N");
    }

    string GetBalanceClass(decimal balance)
    {
        return balance >= 0 ? "activo" : "pasivo";
    }
}

<h1>Accounts</h1>

<a asp-action="Create" class="btn btn-primary mb-3">Create new</a>

<div class="contenedor-totales mb-3">
    <div>
        <div>
            <strong>Activos</strong>
        </div>
        <div class="activo">
            @FormatBalance(Model.Where(x => x.Balance > 0).Sum(x => x.Balance))
        </div>
    </div>
    <div>
        <div>
            <strong>Pasivos</strong>
        </div class="pasivo">
        <div class="pasivo">
            @FormatBalance(Model.Where(x => x.Balance < 0).Sum(x => x.Balance))
        </div>
    </div> 
    <div>
        <div>
            <strong>Total</strong>
        </div>
        <div>
            @FormatBalance(Model.Sum(x => x.Balance))
        </div>
    </div>
</div>

<div class="accordion-body accordion-accounts">
    @foreach(var accountType in Model)
    {
        <div class="accordion-item">
            <h2 class="accordion-header" id="headerOne">
                @{
                    var id = accountType.AccountType.Replace(" ", "");
                    var dataBSTarget = "#" + id;
                    var accountTypeClass = GetBalanceClass(accountType.Balance);
                }
                <button class="accordion-button" type="button" data-bs-toggle="collapse"
                        data-bs-target="@dataBSTarget">
                        <span class="me-3">
                            <span><strong>@accountType.AccountType</strong></span>
                            <span class="@accountTypeClass">@FormatBalance(accountType.Balance)</span>
                        </span>
                </button>
            </h2>
            <div id="@id" class="accordion-collapse collapse show">
                <div>
                    <ul class="list-group">
                        @foreach(var account in accountType.Accounts)
                        {
                            var accountClass = GetBalanceClass(account.Balance);
                            <li class="list-group-item">
                                <span>
                                    <strong><a asp-action="Detail" asp-route-id="@account.Id">@account.Name</a></strong>
                                <a asp-action="Edit" asp-route-id="@account.Id" class="btn-primary btn">
                                    <i class="bi-pencil-fill"></i>
                                </a>
                                <a asp-action="Delete" asp-route-id="@account.Id" class="btn-danger btn">
                                    <i class="bi-trash-fill"></i>
                                </a>
                                </span>
                                <span class="@accountClass">@FormatBalance(account.Balance)</span>
                            </li>
                        }
                    </ul>
                </div>
            </div>
        </div>
    }
</div>