@model IEnumerable<AccountType>

@{
    ViewData["Title"] = "Account Types";
}

<h1> Account Types </h1>
<h5> The account type refers to how we can group accounts.
      Examples: Loans, credit cards, etc.
</h5>

<a asp-action="Create" class="btn btn-primary mb-3">Create new</a>

<table class="table"> 
    <thead>
        <tr>
            <th>Actions</th>
            <th>Name</th>
        </tr>
    </thead> 
    <tbody id="reorderable">
        @foreach (var accountType in Model)
        {
            <tr>
                <td>
                    <input type="hidden" value="@accountType.Id" class="ids"/>
                    <a class="btn btn-primary" asp-action="Update" asp-route-id="@accountType.Id">Edit</a>
                    <a class="btn btn-danger" asp-action="Delete" asp-route-id="@accountType.Id">Delete</a>
                </td>
                <td>
                    @accountType.Name
                </td>
            </tr>
        }
    </tbody>
</table>

@section Scripts {
    <script>

        const urlOrder = '@Url.Action("order")';

        $(function(){
            $("#reorderable").sortable({

                stop: async function(e, ui) {
                    await updateOrder();
                }
            });

            async function updateOrder() {
                const ids = getIdsFromElements();
                await sendIdsToBackend(ids);
            }

            function getIdsFromElements() {
                const ids = $(".ids").map(function(){
                    return $(this).val();
                }).get();

                return ids;
            }

            async function sendIdsToBackend(ids){
                var data = JSON.stringify(ids);

                await fetch(urlOrder, {
                    method: 'POST',
                    body: data,
                    headers: {
                        'Content-Type': 'application/json'
                    }
                });
            }
        })
    </script>
}